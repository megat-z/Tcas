name: Run Test Prioritization Experiment

# This workflow is triggered by an external API call (from Google Apps Script)
on:
  repository_dispatch:
    types: [run-tcp-experiment] # A specific event name for this workflow

jobs:
  run-experiment:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out the repository code
      # This gives the workflow access to all your other files (scripts, data, etc.)
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Python environment
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Step 3: Install Python dependencies
      # Looks for a requirements.txt file and installs the libraries listed there
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Run the experiment script
      # This executes your main Python script.
      # We pass the incoming data from Google Apps Script as a JSON string.
      - name: Run Python experiment script
        id: experiment
        run: |
          python scripts/test.py --data '${{ toJSON(github.event.client_payload) }}'

      # (Optional) Step 5: Commit results back to the repository
      # If your script generates new files (e.g., a new priority order or APFD results),
      # this step will automatically commit them back to your repo.
      - name: Commit and push results
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add results/*
          git commit -m "chore: Update experiment results"
          git push
        # This step only runs if the previous step (run script) was successful
        if: success()
